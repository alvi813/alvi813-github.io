{"version":3,"sources":["components/app-header.js","components/search-panel.js","components/shopping-list-item.js","components/shopping-list.js","components/item-status-filter.js","components/item-add-form.js","App.js","serviceWorker.js","index.js"],"names":["AppHeader","this","props","toBuy","done","className","Component","SearchPanel","state","textToFind","onSearchChange","e","target","value","setState","type","placeholder","onChange","ShoppingListItem","label","onItemDeleted","onSwitchDone","onSwitchImportant","classNames","important","onClick","ShoppingList","data","elements","map","item","key","id","ItemStatusFilter","buttons","name","filter","onFilterChange","buttonClass","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","minId","shoppingListData","deleteItem","idDel","findIndex","el","before","slice","after","addItem","text","newItem","createShoppingListItem","switchProperty","arr","propName","oldItem","items","length","toLowerCase","indexOf","visibleItems","search","doneCount","toBuyCount","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2XAkBeA,G,6KAZD,IAAD,EACiBC,KAAKC,MAApBC,EADF,EACEA,MAAOC,EADT,EACSA,KAEd,OACI,yBAAKC,UAAU,qBACX,gDACA,4BAAKF,EAAL,iBAA0BC,EAA1B,c,GAPQE,cCyBRC,G,kNAvBZC,MAAQ,CACJC,WAAY,I,EAGhBC,eAAiB,SAACC,GACd,IAAMF,EAAaE,EAAEC,OAAOC,MAC5B,EAAKC,SAAS,CAACL,eACf,EAAKP,MAAMQ,eAAeD,I,uDAK1B,OACI,2BAAOM,KAAK,OACLV,UAAU,4BACVW,YAAY,sBACZH,MAAOZ,KAAKO,MAAMC,WAClBQ,SAAUhB,KAAKS,qB,GAnBRJ,cCmDXY,G,6KAjDD,IAAD,EAQDjB,KAAKC,MANLiB,EAFC,EAEDA,MACAC,EAHC,EAGDA,cACAC,EAJC,EAIDA,aACAC,EALC,EAKDA,kBAMAC,EAAa,qBASjB,OApBK,EAMDnB,OAOAmB,GAAc,SAbb,EAODC,YASAD,GAAc,cAKd,0BAAMlB,UAAWkB,GAEjB,0BACIlB,UAAU,2BACVoB,QAASJ,GAEZF,GAGD,4BAAQJ,KAAK,SACLV,UAAU,6DACVoB,QAASH,GAFjB,aAOA,4BAAQP,KAAK,SACLV,UAAU,2DACVoB,QAASL,GAFjB,e,GAvCmBd,cC4BhBoB,G,6KAzBD,IAAD,EAC0DzB,KAAKC,MAA7DyB,EADF,EACEA,KAAMP,EADR,EACQA,cAAeC,EADvB,EACuBA,aAAcC,EADrC,EACqCA,kBACpCM,EAAWD,EAAKE,KAAI,SAACC,GACvB,OACI,wBAAIC,IAAOD,EAAKE,GAAI3B,UAAU,mBAC1B,kBAAC,EAAD,CACIc,MAAOW,EAAKX,MACZf,KAAM0B,EAAK1B,KACXoB,UAAWM,EAAKN,UAChBJ,cAAiB,kBAAMA,EAAcU,EAAKE,KAC1CX,aAAgB,kBAAMA,EAAaS,EAAKE,KACxCV,kBAAqB,kBAAMA,EAAkBQ,EAAKE,WAMlE,OACI,wBAAI3B,UAAU,4BACTuB,O,GArBUtB,cCkCZ2B,G,kNAjCXC,QAAU,CACN,CAAEC,KAAM,MAAOhB,MAAO,OACtB,CAAEgB,KAAM,SAAUhB,MAAO,UACzB,CAAEgB,KAAM,OAAQhB,MAAO,S,uDAGjB,IAAD,EAE4BlB,KAAKC,MAA/BkC,EAFF,EAEEA,OAAQC,EAFV,EAEUA,eAETH,EAAUjC,KAAKiC,QAAQL,KAAI,YAAoB,IAAlBM,EAAiB,EAAjBA,KAAMhB,EAAW,EAAXA,MAE/BmB,EADWF,IAAWD,EACG,iCAAmC,uCAElE,OACI,4BAAQpB,KAAK,SACLV,UAAS,cAASiC,GAClBP,IAAKI,EACLV,QAAS,kBAAMY,EAAeF,KAEjChB,MAKb,OACI,yBAAKd,UAAU,aACV6B,O,GA7Bc5B,cC+ChBiC,G,kNA5CX/B,MAAQ,CACJW,MAAO,I,EAGXqB,cAAgB,SAAC7B,GACb,EAAKG,SAAS,CACVK,MAAOR,EAAEC,OAAOC,S,EAMxB4B,SAAW,SAAC9B,GACRA,EAAE+B,iBACF,EAAKxC,MAAMyC,YAAY,EAAKnC,MAAMW,OAClC,EAAKL,SAAS,CACVK,MAAO,M,uDAMX,OACI,0BAAMd,UAAU,uBACZoC,SAAUxC,KAAKwC,UAEf,2BACI1B,KAAO,OACPV,UAAY,eACZY,SAAYhB,KAAKuC,cACjB3B,MAASZ,KAAKO,MAAMW,MACpBH,YAAc,0BAGlB,4BACIX,UAAU,mCADd,Y,GApCUC,cCqJXsC,G,kNA9IXC,MAAQ,G,EAERrC,MAAQ,CACJsC,iBAAkB,GAClBrC,WAAY,GACZ2B,OAAQ,O,EAYZW,WAAa,SAACf,GACV,EAAKlB,UAAS,YAAyB,IAAvBgC,EAAsB,EAAtBA,iBACNE,EAAQF,EAAiBG,WAAU,SAACC,GAAD,OAAQA,EAAGlB,KAAOA,KAErDmB,EAASL,EAAiBM,MAAM,EAAGJ,GACnCK,EAAQP,EAAiBM,MAAMJ,EAAQ,GAK7C,MAAO,CACHF,iBAJU,sBAAOK,GAAP,YAAkBE,S,EASxCC,QAAU,SAACC,GACP,IAAMC,EAAU,EAAKC,uBAAuBF,GAE5C,EAAKzC,UAAS,YAAyB,IAAvBgC,EAAsB,EAAtBA,iBAGZ,MAAO,CAACA,iBAFI,sBAAOA,GAAP,CAAyBU,S,EAqB7CnC,aAAe,SAACW,GACZ,EAAKlB,UAAS,YAAuB,IAArBgC,EAAoB,EAApBA,iBAEZ,MAAO,CACHA,iBAAkB,EAAKY,eAAeZ,EAAkBd,EAAI,a,EAKxEV,kBAAoB,SAACU,GACjB,EAAKlB,UAAS,YAAuB,IAArBgC,EAAoB,EAApBA,iBAEZ,MAAO,CACHA,iBAAkB,EAAKY,eAAeZ,EAAkBd,EAAI,kB,EAKxEtB,eAAiB,SAACD,GACd,EAAKK,SAAS,CAACL,gB,EAGnB4B,eAAiB,SAACD,GACd,EAAKtB,SAAS,CAACsB,Y,qEAzEIjB,GACnB,MAAO,CACHA,QACAf,MAAM,EACNoB,WAAW,EACXQ,GAAI/B,KAAK4C,W,qCA8BFc,EAAK3B,EAAI4B,GACpB,IAAMZ,EAAQW,EAAIV,WAAU,SAACC,GAAD,OAAQA,EAAGlB,KAAOA,KAGxC6B,EAAUF,EAAIX,GACdQ,EAAO,eAAOK,EAAP,eAAiBD,GAAYC,EAAQD,KAGlD,MAAM,GAAN,mBACOD,EAAIP,MAAM,EAAGJ,IADpB,CAEIQ,GAFJ,YAGOG,EAAIP,MAAMJ,EAAQ,O,6BA8BrBc,EAAOrD,GACX,OAA0B,IAAtBA,EAAWsD,OACJD,EAEJA,EAAM1B,QAAO,SAACN,GACjB,OAAOA,EAAKX,MAAM6C,cAAcC,QAAQxD,EAAWuD,gBAAkB,O,6BAItEF,EAAO1B,GACV,OAAOA,GACH,IAAK,MACD,OAAO0B,EACX,IAAK,SACD,OAAOA,EAAM1B,QAAO,SAACN,GAAD,OAAWA,EAAK1B,QACxC,IAAK,OACD,OAAO0D,EAAM1B,QAAO,SAACN,GAAD,OAAUA,EAAK1B,QACvC,QACI,OAAO0D,K,+BAQf,IAAMI,EAAejE,KAAKmC,OAAOnC,KAAKkE,OAAOlE,KAAKO,MAAMsC,iBAAkB7C,KAAKO,MAAMC,YAAaR,KAAKO,MAAM4B,QACvGgC,EAAYnE,KAAKO,MAAMsC,iBAAiBV,QAAO,SAACc,GAAD,OAAMA,EAAG9C,QAAM2D,OAE9DM,EAAapE,KAAKO,MAAMsC,iBAAiBiB,OAASK,EAGxD,OACI,yBAAK/D,UAAU,qBACX,kBAAC,EAAD,CAAWF,MAAOkE,EAAYjE,KAAMgE,IACpC,yBAAK/D,UAAU,oBACX,kBAAC,EAAD,CACIK,eAAkBT,KAAKS,iBAE3B,kBAAC,EAAD,CACI0B,OAAQnC,KAAKO,MAAM4B,OACnBC,eAAgBpC,KAAKoC,kBAI7B,kBAAC,EAAD,CACIV,KAAMuC,EACN9C,cAAenB,KAAK8C,WACpB1B,aAAcpB,KAAKoB,aACnBC,kBAAmBrB,KAAKqB,oBAG5B,kBAAC,EAAD,CAAaqB,YAAa1C,KAAKqD,e,GA1I7BhD,cCCEgE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0d14f9de.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\n\r\nimport './app-header.css';\r\n\r\n\r\nclass AppHeader extends Component {\r\n    render() {\r\n        const {toBuy, done} = this.props;\r\n\r\n        return (\r\n            <div className=\"app-header d-flex\">\r\n                <h1>My shopping list</h1>\r\n                <h2>{toBuy} more to buy, {done} done</h2>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppHeader;","import React, {Component} from \"react\";\r\n\r\nimport './search-panel.css';\r\n\r\n\r\nclass SearchPanel extends Component {\r\n\r\n    state = {\r\n        textToFind: ''\r\n    };\r\n\r\n    onSearchChange = (e) => {\r\n        const textToFind = e.target.value;\r\n        this.setState({textToFind});\r\n        this.props.onSearchChange(textToFind);\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <input type=\"text\"\r\n                   className=\"form-control search-input\"\r\n                   placeholder=\"Type here to search\"\r\n                   value={this.state.textToFind}\r\n                   onChange={this.onSearchChange}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default  SearchPanel;","import React, {Component} from \"react\";\r\n\r\nimport \"./shopping-list-item.css\"\r\n\r\n\r\nclass ShoppingListItem extends Component {\r\n\r\n    render() {\r\n        const {\r\n            label,\r\n            onItemDeleted,\r\n            onSwitchDone,\r\n            onSwitchImportant,\r\n            done,\r\n            important\r\n        } = this.props;\r\n\r\n\r\n        let classNames = \"shopping-list-item\";\r\n        if (done) {\r\n            classNames += \" done\";\r\n        }\r\n        if (important) {\r\n            classNames += \" important\";\r\n        }\r\n\r\n\r\n        return (\r\n            <span className={classNames}>\r\n\r\n            <span\r\n                className=\"shopping-list-item-label\"\r\n                onClick={onSwitchDone}\r\n            >\r\n            {label}\r\n            </span>\r\n\r\n            <button type=\"button\"\r\n                    className=\"btn btn-outline-danger btn-sm float-right button-important\"\r\n                    onClick={onSwitchImportant}\r\n            >\r\n                Important\r\n            </button>\r\n\r\n            <button type=\"button\"\r\n                    className=\"btn btn-outline-success btn-sm float-right button-delete\"\r\n                    onClick={onItemDeleted}\r\n            >\r\n                Delete\r\n            </button>\r\n\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShoppingListItem;","import React, {Component} from \"react\";\r\nimport ShoppingListItem from \"./shopping-list-item\";\r\n\r\nimport \"./shopping-list.css\";\r\n\r\n\r\nclass ShoppingList extends Component {\r\n\r\n    render() {\r\n        const {data, onItemDeleted, onSwitchDone, onSwitchImportant} = this.props;\r\n        const elements = data.map((item) => {\r\n            return (\r\n                <li key = {item.id} className=\"list-group-item\">\r\n                    <ShoppingListItem\r\n                        label={item.label}\r\n                        done={item.done}\r\n                        important={item.important}\r\n                        onItemDeleted = {() => onItemDeleted(item.id)}\r\n                        onSwitchDone = {() => onSwitchDone(item.id)}\r\n                        onSwitchImportant = {() => onSwitchImportant(item.id)}\r\n                    />\r\n                </li>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <ul className=\"list-group shopping-list\">\r\n                {elements}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShoppingList;","import React, {Component} from 'react';\r\n\r\nimport \"./item-class-filter.css\"\r\n\r\n\r\nclass ItemStatusFilter extends Component {\r\n\r\n    buttons = [\r\n        { name: 'all', label: 'All'},\r\n        { name: 'active', label: 'Active'},\r\n        { name: 'done', label: 'Done'}\r\n    ]\r\n\r\n    render() {\r\n\r\n        const {filter, onFilterChange} = this.props;\r\n\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const isActive = filter === name;\r\n            const buttonClass = isActive ? 'btn-outline-success btn-active' : 'btn-outline-secondary btn-not-active'\r\n\r\n            return (\r\n                <button type=\"button\"\r\n                        className={`btn ${buttonClass}`}\r\n                        key={name}\r\n                        onClick={() => onFilterChange(name)}\r\n                >\r\n                    {label}\r\n                </button>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ItemStatusFilter;","import React, {Component} from 'react';\n\nimport './item-add-form.css';\n\n\n\nclass ItemAddForm extends Component {\n\n    state = {\n        label: ''\n    };\n\n    onLabelChange = (e) => {\n        this.setState({\n            label: e.target.value\n        });\n\n\n    };\n\n    onSubmit = (e) => {\n        e.preventDefault();    // the page doesn't reload and the entered data doesn't disappear\n        this.props.onItemAdded(this.state.label);\n        this.setState({\n            label: ''\n        });\n    }\n\n\n    render() {\n        return (\n            <form className=\"item-add-form d-flex\"\n                onSubmit={this.onSubmit}>\n\n                <input\n                    type = \"text\"\n                    className = \"form-control\"\n                    onChange = {this.onLabelChange}\n                    value = {this.state.label}\n                    placeholder = \"Enter your needs here\"\n                />\n\n                <button\n                    className=\"btn btn-outline-success btn-add\"\n                >\n                    Add\n                </button>\n            </form>\n        )\n    }\n}\n\nexport default ItemAddForm;\n","import React, {Component} from 'react';\r\n\r\nimport AppHeader from \"./components/app-header\";\r\nimport SearchPanel from \"./components/search-panel\";\r\nimport ShoppingList from \"./components/shopping-list\";\r\nimport ItemStatusFilter from './components/item-status-filter';\r\nimport ItemAddForm from \"./components/item-add-form\";\r\n\r\nimport \"./App.css\"\r\n\r\n\r\nclass App extends Component {\r\n\r\n    minId = 10;\r\n\r\n    state = {\r\n        shoppingListData: [],\r\n        textToFind: '',\r\n        filter: 'all'   // filter can be: (active, all, done)\r\n    };\r\n\r\n    createShoppingListItem(label) {\r\n        return {\r\n            label,\r\n            done: false,\r\n            important: false,\r\n            id: this.minId++\r\n        }\r\n    }\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({shoppingListData}) => {\r\n            const idDel = shoppingListData.findIndex((el) => el.id === id);\r\n\r\n            const before = shoppingListData.slice(0, idDel);\r\n            const after = shoppingListData.slice(idDel + 1);\r\n\r\n            const newArray = [...before, ...after];\r\n\r\n\r\n            return {\r\n                shoppingListData: newArray\r\n            };\r\n        });\r\n    };\r\n\r\n    addItem = (text) => {\r\n        const newItem = this.createShoppingListItem(text);\r\n\r\n        this.setState(({shoppingListData}) => {\r\n            const newArr = [...shoppingListData, newItem];\r\n\r\n            return {shoppingListData: newArr};\r\n        });\r\n    };\r\n\r\n    switchProperty(arr, id, propName) {\r\n        const idDel = arr.findIndex((el) => el.id === id);\r\n\r\n        // update object\r\n        const oldItem = arr[idDel];\r\n        const newItem = {...oldItem, [propName]: !oldItem[propName]};\r\n\r\n        // construct new array\r\n        return [\r\n            ...arr.slice(0, idDel),\r\n            newItem,\r\n            ...arr.slice(idDel + 1)\r\n        ];\r\n    }\r\n\r\n    onSwitchDone = (id) => {\r\n        this.setState(({shoppingListData})=>{\r\n\r\n            return {\r\n                shoppingListData: this.switchProperty(shoppingListData, id, 'done')\r\n            };\r\n        });\r\n    };\r\n\r\n    onSwitchImportant = (id) => {\r\n        this.setState(({shoppingListData})=>{\r\n\r\n            return {\r\n                shoppingListData: this.switchProperty(shoppingListData, id, 'important')\r\n            };\r\n        });\r\n    };\r\n\r\n    onSearchChange = (textToFind) => {\r\n        this.setState({textToFind});\r\n    };\r\n\r\n    onFilterChange = (filter) => {\r\n        this.setState({filter});\r\n    };\r\n\r\n    search (items, textToFind) {\r\n        if (textToFind.length === 0) {\r\n            return items;\r\n        }\r\n        return items.filter((item) => {\r\n            return item.label.toLowerCase().indexOf(textToFind.toLowerCase()) > -1   // toLowerCase() - to search regardless of case\r\n        });\r\n    };\r\n\r\n    filter(items, filter) {\r\n        switch(filter) {\r\n            case 'all':\r\n                return items;\r\n            case 'active':\r\n                return items.filter((item) => !item.done);\r\n            case 'done':\r\n                return items.filter((item) => item.done);\r\n            default:\r\n                return items;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const visibleItems = this.filter(this.search(this.state.shoppingListData, this.state.textToFind), this.state.filter);\r\n        const doneCount = this.state.shoppingListData.filter((el)=>el.done).length; // filter creates a new array so we don't change state here\r\n\r\n        const toBuyCount = this.state.shoppingListData.length - doneCount;\r\n\r\n\r\n        return (\r\n            <div className=\"shopping-list-app\">\r\n                <AppHeader toBuy={toBuyCount} done={doneCount}/>\r\n                <div className=\"top-panel d-flex\">\r\n                    <SearchPanel\r\n                        onSearchChange = {this.onSearchChange}\r\n                    />\r\n                    <ItemStatusFilter\r\n                        filter={this.state.filter}\r\n                        onFilterChange={this.onFilterChange}\r\n                    />\r\n                </div>\r\n\r\n                <ShoppingList\r\n                    data={visibleItems}\r\n                    onItemDeleted={this.deleteItem}\r\n                    onSwitchDone={this.onSwitchDone}\r\n                    onSwitchImportant={this.onSwitchImportant}\r\n                />\r\n\r\n                <ItemAddForm onItemAdded={this.addItem}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}