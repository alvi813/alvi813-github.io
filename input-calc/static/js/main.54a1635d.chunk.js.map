{"version":3,"sources":["components/sum.js","components/substr.js","components/multip.js","components/div.js","App.js","serviceWorker.js","index.js"],"names":["Sum","props","setFirstNumberSum","e","setState","firstNumberSum","target","value","setSecondNumberSum","secondNumberSum","state","sum","Number","this","className","type","onChange","Component","Substr","setFirstNumberSubstr","firstNumberSubstr","setSecondNumberSubstr","secondNumberSubstr","substr","Multip","setFirstNumberMultip","firstNumberMultip","setSecondNumberMultip","secondNumberMultip","multip","Div","setFirstNumberDiv","firstNumberDiv","setSecondNumberDiv","secondNumberDiv","div","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.54a1635d.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport '../App.css';\r\n\r\n\r\nclass Sum extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstNumberSum: \"\",\r\n            secondNumberSum: \"\"\r\n        }\r\n    }\r\n\r\n\r\n    setFirstNumberSum = (e) => {\r\n        this.setState({firstNumberSum: e.target.value})\r\n    }\r\n\r\n    setSecondNumberSum = (e) => {\r\n        this.setState({secondNumberSum: e.target.value})\r\n    }\r\n\r\n\r\n    render() {\r\n        const sum = Number(this.state.firstNumberSum) + Number(this.state.secondNumberSum);\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"calculation\">\r\n                    <div className=\"title\">\r\n                        Сложение\r\n                    </div>\r\n\r\n\r\n                    <h4>Первое число:&ensp;\r\n                        <input\r\n                            className=\"inputField\"\r\n                            type=\"number\"\r\n                            value={this.state.firstNumberSum}\r\n                            onChange={this.setFirstNumberSum}\r\n                        />\r\n                    </h4>\r\n\r\n\r\n                    <h4>Второе число:&ensp;\r\n                        <input\r\n                            className=\"inputField\"\r\n                            type=\"number\"\r\n                            value={this.state.secondNumberSum}\r\n                            onChange={this.setSecondNumberSum}\r\n                        />\r\n                    </h4>\r\n\r\n\r\n                    <h4>\r\n                        Результат: {sum}\r\n                    </h4>\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Sum;\r\n\r\n","import React, {Component} from 'react';\r\nimport '../App.css';\r\n\r\n\r\nclass Substr extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstNumberSubstr: \"\",\r\n            secondNumberSubstr: \"\"\r\n        }\r\n    }\r\n\r\n\r\n    setFirstNumberSubstr = (e) => {\r\n        this.setState({firstNumberSubstr: e.target.value})\r\n    }\r\n\r\n    setSecondNumberSubstr = (e) => {\r\n        this.setState({secondNumberSubstr: e.target.value})\r\n    }\r\n\r\n\r\n    render() {\r\n        const substr = Number(this.state.firstNumberSubstr) - Number(this.state.secondNumberSubstr);\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"calculation\">\r\n                    <div className=\"title\">\r\n                        Вычитание\r\n                    </div>\r\n\r\n\r\n                    <h4>Первое число:&ensp;\r\n                        <input\r\n                            className=\"inputField\"\r\n                            type=\"number\"\r\n                            value={this.state.firstNumberSubstr}\r\n                            onChange={this.setFirstNumberSubstr}\r\n                        />\r\n                    </h4>\r\n\r\n\r\n                    <h4>Второе число:&ensp;\r\n                        <input\r\n                            className=\"inputField\"\r\n                            type=\"number\"\r\n                            value={this.state.secondNumberSubstr}\r\n                            onChange={this.setSecondNumberSubstr}\r\n                        />\r\n                    </h4>\r\n\r\n\r\n                    <h4>\r\n                        Результат: {substr}\r\n                    </h4>\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Substr;\r\n\r\n","import React, {Component} from 'react';\r\nimport '../App.css';\r\n\r\n\r\nclass Multip extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstNumberMultip: \"\",\r\n            secondNumberMultip: \"\",\r\n        }\r\n    }\r\n\r\n\r\n    setFirstNumberMultip = (e) => {\r\n        this.setState({firstNumberMultip: e.target.value})\r\n    }\r\n\r\n    setSecondNumberMultip = (e) => {\r\n        this.setState({secondNumberMultip: e.target.value})\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const multip = Number(this.state.firstNumberMultip) * Number(this.state.secondNumberMultip);\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"calculation\">\r\n                    <div className=\"title\">\r\n                        Умножение\r\n                    </div>\r\n\r\n\r\n                    <h4>Первое число:&ensp;\r\n                        <input\r\n                            className=\"inputField\"\r\n                            type=\"number\"\r\n                            value={this.state.firstNumberMultip}\r\n                            onChange={this.setFirstNumberMultip}\r\n                        />\r\n                    </h4>\r\n\r\n\r\n                    <h4>Второе число:&ensp;\r\n                        <input\r\n                            className=\"inputField\"\r\n                            type=\"number\"\r\n                            value={this.state.secondNumberMultip}\r\n                            onChange={this.setSecondNumberMultip}\r\n                        />\r\n                    </h4>\r\n\r\n\r\n                    <h4>\r\n                        Результат: {multip}\r\n                    </h4>\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Multip;\r\n\r\n","import React, {Component} from 'react';\r\nimport '../App.css';\r\n\r\n\r\nclass Div extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstNumberDiv: \"\",\r\n            secondNumberDiv: \"\"\r\n        }\r\n    }\r\n\r\n    setFirstNumberDiv = (e) => {\r\n        this.setState({firstNumberDiv: e.target.value})\r\n    }\r\n\r\n    setSecondNumberDiv = (e) => {\r\n        this.setState({secondNumberDiv: e.target.value})\r\n    }\r\n\r\n\r\n    render() {\r\n        const div = Number(this.state.firstNumberDiv) / Number(this.state.secondNumberDiv);\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"calculation\">\r\n                    <div className=\"title\">\r\n                        Деление\r\n                    </div>\r\n\r\n\r\n                    <h4>Первое число:&ensp;\r\n                        <input\r\n                            className=\"inputField\"\r\n                            type=\"number\"\r\n                            value={this.state.firstNumberDiv}\r\n                            onChange={this.setFirstNumberDiv}\r\n                        />\r\n                    </h4>\r\n\r\n\r\n                    <h4>Второе число:&ensp;\r\n                        <input\r\n                            className=\"inputField\"\r\n                            type=\"number\"\r\n                            value={this.state.secondNumberDiv}\r\n                            onChange={this.setSecondNumberDiv}\r\n                        />\r\n                    </h4>\r\n\r\n\r\n                    <h4>\r\n                        Результат: {div}\r\n                    </h4>\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Div;\r\n\r\n","import React, {Component} from 'react';\r\nimport Sum from \"./components/sum\";\r\nimport Substr from \"./components/substr\";\r\nimport Multip from \"./components/multip\";\r\nimport Div from \"./components/div\";\r\n\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className='App'>\r\n                <Sum/>\r\n                <Substr/>\r\n                <Multip/>\r\n                <Div/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nApp.propTypes = {};\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}