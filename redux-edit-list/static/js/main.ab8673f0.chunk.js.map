{"version":3,"sources":["components/actionCreators/editList.js","components/store/actions/editList.js","components/list/list.js","App.js","components/store/reducers/editList.js","components/store/reducers/index.js","components/store/store.js","index.js"],"names":["addToEditList","name","type","payload","removeFromEditList","index","editListItem","List","props","closeEdit","setState","editIndex","onSubmit","e","preventDefault","state","itemName","this","editList","className","value","onChange","target","map","editItem","key","id","style","display","flexDirection","alignItems","onBlur","marginLeft","onClick","Component","connect","dispatch","bindActionCreators","App","initialState","combineReducers","action","length","slice","store","createStore","reducer","rootNode","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.ab8673f0.chunk.js","sourcesContent":["import {ADD_TO_EDIT_LIST, REMOVE_FROM_EDIT_LIST, EDIT_LIST_ITEM} from '../store/actions/editList';\r\n\r\nconst addToEditList = (name) => ({type: ADD_TO_EDIT_LIST, payload: {name}});\r\nconst removeFromEditList = (index) => ({type: REMOVE_FROM_EDIT_LIST, payload: {index}});\r\nconst editListItem = (index, name) => ({type: EDIT_LIST_ITEM, payload: {index, name}});\r\n\r\nexport { addToEditList, removeFromEditList, editListItem }","const ADD_TO_EDIT_LIST = 'ADD_TO_EDIT_LIST';\r\nconst REMOVE_FROM_EDIT_LIST = 'REMOVE_FROM_EDIT_LIST';\r\nconst EDIT_LIST_ITEM = 'EDIT_LIST_ITEM';\r\n\r\nexport { ADD_TO_EDIT_LIST, REMOVE_FROM_EDIT_LIST, EDIT_LIST_ITEM }","import React, {Component} from 'react';\r\nimport { addToEditList, removeFromEditList, editListItem } from '../actionCreators/editList';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nimport \"./list.css\"\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        editList: state.editList\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = () => {\r\n    return (dispatch) => {\r\n        return {\r\n            addToEditList: bindActionCreators(addToEditList, dispatch),\r\n            removeFromEditList: bindActionCreators(removeFromEditList, dispatch),\r\n            editListItem: bindActionCreators(editListItem, dispatch),\r\n        }\r\n    }\r\n}\r\n\r\nclass List extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            itemName: '',\r\n            editIndex: null\r\n        }\r\n    }\r\n\r\n    closeEdit = () => {\r\n        this.setState({editIndex: null})\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();    // the page doesn't reload and the entered data doesn't disappear\r\n        this.props.addToEditList(this.state.itemName);\r\n        this.setState({\r\n            itemName: ''\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {editList, addToEditList, removeFromEditList, editListItem} = this.props;\r\n\r\n        return (\r\n            <div className=\"list\">\r\n                <form className=\"item-add-form d-flex new-input\"\r\n                      onSubmit={this.onSubmit}\r\n                >\r\n\r\n                    <input className=\"form-control\"\r\n                        value={this.state.itemName}\r\n                        onChange={(e) => this.setState({itemName: e.target.value})}\r\n                    />\r\n                    <button className=\"btn btn-outline-success btn-sm float-right button-add\"\r\n                       //// onClick={() => addToEditList(this.state.itemName)}  // we don't need this line, because of add onSubmit\r\n                    >\r\n                        Добавить элемент\r\n                    </button>\r\n                </form>\r\n                {editList.map((editItem, index) => (\r\n                    <div\r\n                        key={editItem.id}\r\n                        style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'row',\r\n                            alignItems: 'center'\r\n                        }}\r\n                    >\r\n                        <div>\r\n                            <p>\r\n                                {editItem.name}\r\n                            </p>\r\n                            {(index === this.state.editIndex) &&\r\n                            <form onSubmit={this.closeEdit}>\r\n                                <input\r\n                                    value={editItem.name}\r\n                                    onChange={(e) => editListItem(index, e.target.value)}\r\n                                    onBlur={this.closeEdit}\r\n                                />\r\n                            </form>\r\n                            }\r\n                        </div>\r\n                        <div style={{marginLeft: '10px'}}>\r\n                            <button className=\"btn btn-outline-success btn-sm float-right\" onClick={() => this.setState({editIndex: index})}>Редактировать</button>\r\n                        </div>\r\n                        <div style={{marginLeft: '10px'}}>\r\n                            <button className=\"btn btn-outline-success btn-sm float-right\" onClick={() => removeFromEditList(index)}>Удалить</button>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","import React, { Component } from \"react\";\nimport List from './components/list/list';\n\nimport './App.css'\n\nclass App extends Component {\n  render() {\n\n    return (\n        <div className=\"main-div\">\n          <List/>\n        </div>\n    )\n  }\n}\n\nexport default App;\n","import {ADD_TO_EDIT_LIST, REMOVE_FROM_EDIT_LIST, EDIT_LIST_ITEM} from '../actions/editList';\r\n\r\nconst initialState = [];\r\n\r\nfunction editList(state = initialState, action) {\r\n    switch(action.type) {\r\n        case ADD_TO_EDIT_LIST:\r\n            return [{name: action.payload.name, id: state.length + 1}, ...state];\r\n        case REMOVE_FROM_EDIT_LIST:\r\n            return [\r\n                ...state.slice(0, action.payload.index),\r\n                ...state.slice(action.payload.index + 1)\r\n            ];\r\n        case EDIT_LIST_ITEM:\r\n            return [\r\n                ...state.slice(0, action.payload.index),\r\n                {...state[action.payload.index], name: action.payload.name},\r\n                ...state.slice(action.payload.index + 1)\r\n            ];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport { editList }","import { combineReducers } from 'redux';\r\nimport { editList } from './editList';\r\n\r\nexport default combineReducers({\r\n    editList\r\n})","import { createStore } from 'redux';\r\nimport reducer  from './reducers'\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './components/store/store';\n\nimport './index.css';\n\nconst rootNode = document.getElementById('root');\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    rootNode\n);"],"sourceRoot":""}